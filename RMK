#!/bin/bash

 
   # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
   #                                                                                                 #
   #   R R R R R                                                                                     #
   #   R        R                             d   0 0 0 0                 !!!             3 3 3 3    #
   #   R        R                             d  0      00                ! !                    3   #
   #   R        R                             d  0     0 0                ! !                    3   #
   #   R R R R R         a                    d  0    0  0                ! !                    3   #
   #   R   R       a a a a  n n n n    d d d d   0   0   0  m  m m  m m   ! !  z z z z z    3 3 3    #
   #   R    R     a      a  nn     n  d       d  0  0    0  m m   m    m  !!!        z           3   #
   #   R     R    a      a  n      n  d       d  0 0     0  m     m    m           z             3   #
   #   R      R   a      a  n      n  d       d  00      0  m     m    m  !!!    z               3   #
   #   R       R   a a a a  n      n   d d d d    0 0 0 0   m     m    m  !!!  z z z z z  3 3 3 3    #
   #                                                                                                 # 
   #                                                                                                 #
   #      M             M   3 3 3 3         K       K                           N         N  !!!     #
   #      MM           MM          3        K     K                         //  N N       N  ! !     #
   #      M M         M M          3        K   K                          //   N  N      N  ! !     #
   #      M  M       M  M          3        K K               a           //    N   N     N  ! !     #
   #      M   M     M   M     3 3 3         KK          a a a a  p p p p        N    N    N  ! !     #
   #      M    M   M    M          3        K K        a      a  p      p       N     N   N  !!!     #
   #      M     M M     M          3        K   K      a      a  p      p       N      N  N          #
   #      M      M      M          3        K     K    a      a  p      p       N       N N  !!!     #
   #      M             M   3 3 3 3         K       K   a a a a  p p p p        N         N  !!!     #
   #                                                             p                                   #
   #                                                             p                                   # 
   #                                                             p                                   #
   #                                                             p                                   #
   #                                                                                                 #
   # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

#Initialize default global variables
AdpaterConnected='n/a'
SSID='n/a'
BSSIDclean='n/a'
PSKclean='n/a'
WindscribeLocation=''

#Initialize persistent global variables
#
#WindscribeLocation==
#


#Functions

#Windscribe Choice Function
Windscribe_Choice () {

read -n1 -p "Would You Like to Input a Location? [y/N]: " LocationResponse #response is local variable
echo ''
if [ $LocationResponse == "y" ] || [ $LocationResponse == "Y" ]; then
echo 'Location              Short Name' 
echo 'US Central            US-C'
echo 'US East               US'
echo 'US West               US-W'
echo 'WINDFLIX UK           GB-N'
echo 'WINDFLIX US           US-N'
echo 'Canada East           CA'
echo 'Canada West           CA-W'
echo 'Austria               AT'
echo 'Belgium               BE'
echo 'Bulgaria              BG'
echo 'Czech Republic        CZ'
echo 'Denmark               DK'
echo 'Finland               FI'
echo 'France                FR'
echo 'Germany               DE'
echo 'Greece                GR'
echo 'Hungary               HU'
echo 'Iceland               IS'
echo 'Ireland               IE'
echo 'Israel                IL'
echo 'Italy                 IT'
echo 'Latvia                LV'
echo 'Lithuania             LT'
echo 'Luxembourg            LU'
echo 'Moldova               MD'
echo 'Netherlands           NL'
echo 'Norway                NO'
echo 'Poland                PL'
echo 'Portugal              PT'
echo 'Romania               RO'
echo 'Slovakia              SK'
echo 'Spain                 ES'
echo 'Sweden                SE'
echo 'Switzerland           CH'
echo 'United Kingdom        GB'
echo 'Azerbaijan            AZ'
echo 'India                 IN'
echo 'Libya                 LY'
echo 'Russia                RU'
echo 'South Africa          ZA'
echo 'Turkey                TR'
echo 'Ukraine               UA'
echo 'Australia             AU'
echo 'New Zealand           NZ'
echo 'Hong Kong             HK'
echo 'Indonesia             ID'
echo 'Japan                 JP'
echo 'Malaysia              MY'
echo 'Singapore             SG'
echo 'South Korea           KR'
echo 'Taiwan                TW'
echo 'Thailand              TH'
echo 'United Arab Emirates  AE'
echo 'Vietnam               VN'
echo 'Argentina             AR'
echo 'Brazil                BR'
echo 'Mexico                MX'

read -p "Please Choose From the Above List: " WindscribeLocation

     Windscribe_Connect
     exit .1

    elif [ $LocationResponse == "n" ] || [ $LocationResponse == "N" ]; then
        echo "You Chose Nope "
	Windscribe_Connect
	exit .1

    else
        Windscribe_Choice
        exit .1
fi
}

#Connect to Windscribe VPN funciton
Windscribe_Connect () {
windscribe connect $WindscribeLocation
}

Windscribe_Initiate () {
read -n1 -p "Would You Like to Connect to Windscribe VPN?: [y/N]: " InitiateResponse

if [ $InitiateResponse == "y" ] || [ $InitiateResponse == "Y" ]; then
	echo ''
	Windscribe_Choice
	exit .1

		elif [ $InitiateResponse == "n" ] || [ $InitiateResponse == "N" ]; then
	        echo "Finshed"
		exit 1

			else
			echo ''
			Windscribe_Choice
			exit .1
fi
}

#Print "Please Enter to Proceed"
echo 'Please Enter Account Password to Proceed'

#Initiate admin access so that programs do not require further input of user account's password
#Print "Thank You" 
sudo echo "Let's Begin"

#
#echo $AdpaterConnected
#echo $SSID
#echo $BSSIDclean
#echo $PSKclean
#echo $WindscribeLocation

#Check to see what connections are up
#ie what adapters are currently working
#AdapterConnected=$(ip -o link show | awk '/state UP/{ gsub("\:",""); print $2}')

#
AdapterConnected=$(ip -o link show | awk '/state UP/{ gsub("\:",""); printf " %s",$2}')

#AdapterConnected1=$(echo $AdapterConnected | awk '/ ,/{ gsub(

#Print active adapter's name
echo "Here Is My Connected Adapter's Name: "$AdapterConnected

#Get SSID of currently connected wireless network
SSID=$(iwgetid -r)

#Print "Here Is My Connected SSID"
echo 'Here Is My Connected SSID: '$SSID

#Grabs the BSSID for the currently connected wireless network
BSSIDdirty=$(sudo awk 'NR == 13' /etc/NetworkManager/system-connections/$SSID) #~/Programs/Scripts/bin/D2D7B1)

#Prints "This Is the Dirty BSSID :" and BSSIDdirty variable
#echo 'This Is the Dirty BSSID: '$BSSIDdirty

#This is to clean up the dirty BSSID so that it is readable by future programs as input
BSSIDclean=$(echo $BSSIDdirty | awk -F"=" '{print $2}' | awk -F";" '{print $1}')

#Print "This Is The BSSID: " and BSSID variable
echo 'This Is The BSSID: '$BSSIDclean

#Grabs the PSK ie password for the currently connected wireless network
PSKdirty=$(sudo awk 'NR == 18' /etc/NetworkManager/system-connections/$SSID)

#Print "This Is The Dirty PSK: " and PSKdirty variable
#echo this is the PSKdirty $PSKdirty

#This is to clean up the dirty PSK so that it is readable by future programs as input
PSKclean=$(echo $PSKdirty | awk -F"=" '{print $2}')

#Print "This Is The PSK: " and PSK variable
echo 'This Is The PSK: '$PSKclean

#Disconnect from network
nmcli d disconnect $AdapterConnected

#Stop Network-Manager Service
sudo service network-manager stop
echo 'Network-Manager Service Stop'
sleep 0.1

#Stop Network Service
sudo service networking stop
echo 'Network Service Stop'
sleep 0.1

#Randomize Me Kap'n! aka "RMK" works fine without initializing this command
#macchanger start

#Randomize Mac Address with same vendor
sudo macchanger -a $AdapterConnected

#Randomize Me Kap'n! aka "RMK" works fine without initializing this command
#macchanger stop

#Start Network-Manager Service
sudo service network-manager start
echo 'Network-Manager Service Start'
sleep 0.8

#Start Networking Service
sudo service networking start
echo 'Network Service Start'
sleep 4

#Connect to previously connected wireless network
nmcli d wifi connect $BSSIDclean password $PSKclean

#Windscribe VPN connects
#Will automatically connect to US-East if othe location is not spedicifed
#Do not enable this option if you do not have a Windscribe VPN account

#Starts the Windscribe VPN location choice function
Windscribe_Initiate

#Starts the windscribe VPN connection
#Windscribe_Connect


#Extra command that is not in use, it is nice to know if needing statistics display for wifi
#nmcli -f in-use,ssid,bssid,signal,bars  dev wifi
